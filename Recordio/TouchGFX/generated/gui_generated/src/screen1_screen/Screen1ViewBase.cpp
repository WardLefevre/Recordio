/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

Screen1ViewBase::Screen1ViewBase() :
    interaction1Counter(0),
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &Screen1ViewBase::sliderValueChangedCallbackHandler)
{
    image.setXY(0, 0);
    image.setBitmap(Bitmap(BITMAP_BACKGROUND_ID));

    playtoggle.setXY(224, 162);
    playtoggle.setBitmaps(Bitmap(BITMAP_DARK_ICONS_PLAY_48_ID), Bitmap(BITMAP_PAUSE_EDIT_ID));
    playtoggle.setAction(buttonCallback);

    previousbutton.setXY(159, 170);
    previousbutton.setBitmaps(Bitmap(BITMAP_DARK_ICONS_GO_BACK_32_ID), Bitmap(BITMAP_GO_BACK_EDIT_ID));
    previousbutton.setAction(buttonCallback);

    powertoggle.setXY(94, 12);
    powertoggle.setBitmaps(Bitmap(BITMAP_DARK_ICONS_POWER_48_ID), Bitmap(BITMAP_POWER_EDIT_ID));
    powertoggle.setAction(buttonCallback);

    nextbutton.setXY(281, 170);
    nextbutton.setBitmaps(Bitmap(BITMAP_DARK_ICONS_GO_NEXT_32_ID), Bitmap(BITMAP_GO_NEXT_EDIT_ID));
    nextbutton.setAction(buttonCallback);

    searchbutton.setXY(339, 13);
    searchbutton.setBitmaps(Bitmap(BITMAP_DARK_ICONS_SEARCH_48_ID), Bitmap(BITMAP_SEARCH_EDIT_ID));
    searchbutton.setAction(buttonCallback);

    volumeslider.setXY(71, 227);
    volumeslider.setBitmaps(Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER2_ROUND_BACK_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER2_ROUND_BACK_ID), Bitmap(BITMAP_DARK_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER2_ROUND_NOB_ID));
    volumeslider.setupHorizontalSlider(2, 6, 0, 0, 284);
    volumeslider.setValueRange(0, 100);
    volumeslider.setValue(0);
    volumeslider.setNewValueCallback(sliderValueChangedCallback);

    settingsbutton.setXY(176, 12);
    settingsbutton.setBitmaps(Bitmap(BITMAP_DARK_ICONS_SETTINGS_48_ID), Bitmap(BITMAP_SETTINGS_EDIT_ID));
    settingsbutton.setAction(buttonCallback);

    homebutton.setXY(257, 13);
    homebutton.setBitmaps(Bitmap(BITMAP_DARK_ICONS_HOME_48_ID), Bitmap(BITMAP_HOME_EDIT_ID));
    homebutton.setAction(buttonCallback);

    stationtext.setXY(194, 87);
    stationtext.setColor(touchgfx::Color::getColorFrom24BitRGB(171, 171, 171));
    stationtext.setLinespacing(0);
    stationtext.setTypedText(TypedText(T_SINGLEUSEID7));

    add(image);
    add(playtoggle);
    add(previousbutton);
    add(powertoggle);
    add(nextbutton);
    add(searchbutton);
    add(volumeslider);
    add(settingsbutton);
    add(homebutton);
    add(stationtext);
}

void Screen1ViewBase::setupScreen()
{

}

//Handles delays
void Screen1ViewBase::handleTickEvent()
{
    View::handleTickEvent();
    if(interaction1Counter > 0)
    {
        interaction1Counter--;
        if(interaction1Counter == 0)
        {
            //Interaction2
            //When Interaction1 completed change screen to Screensaver1
            //Go to Screensaver1 with no screen transition
            application().gotoScreensaver1ScreenNoTransition();
        }
    }
}

//Called when the screen is done with transition/load
void Screen1ViewBase::afterTransition()
{
    //Interaction1
    //When screen is entered delay
    //Delay for 20000 ms (1200 Ticks)
    interaction1Counter = INTERACTION1_DURATION;
}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &playtoggle)
    {
        //playtoggle
        //When playtoggle clicked call virtual function
        //Call playtogglefunction
        playtogglefunction();
    }
    else if (&src == &previousbutton)
    {
        //previousbutton
        //When previousbutton clicked call virtual function
        //Call previousbuttonfunction
        previousbuttonfunction();
    }
    else if (&src == &powertoggle)
    {
        //powertoggle
        //When powertoggle clicked call virtual function
        //Call powertogglefunction
        powertogglefunction();
    }
    else if (&src == &nextbutton)
    {
        //nextbutton
        //When nextbutton clicked call virtual function
        //Call nextbuttonfunction
        nextbuttonfunction();
    }
    else if (&src == &searchbutton)
    {
        //searchbutton
        //When searchbutton clicked call virtual function
        //Call searchbuttonfunction
        searchbuttonfunction();
    }
    else if (&src == &settingsbutton)
    {
        //settingsbutton
        //When settingsbutton clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
    else if (&src == &homebutton)
    {
        //homebutton
        //When homebutton clicked change screen to Screensaver1
        //Go to Screensaver1 with no screen transition
        application().gotoScreensaver1ScreenNoTransition();
    }
}

void Screen1ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &volumeslider)
    {
        //volumeslider
        //When volumeslider value changed call virtual function
        //Call volumesliderfunction
        volumesliderfunction(value);
    }
}
